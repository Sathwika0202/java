// print sum from i to n numbers.


public class Main{
    public static void printSum(int i, int n, int sum){
        if(i==n){
            sum+=i;
            System.out.println(sum);
            return;
        }
        sum+=i;
        printSum(i+1,n,sum);
    }
    
    public static void main(String[] args){
        int i = 5;
        int n = 10;
        int sum = 0;
        printSum(i,n,sum);
    }
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//factorial of n

public class Main{
    public static int factorial(int n){
        if(n==0||n==1){
            return 1;
        }
        return (n*factorial(n-1));
    }
    
    public static void main(String[] args){
        int fact=factorial(3);
        System.out.println(fact);
    }
}


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// fibonacci series of given n 

public class Main{
    public static void fibo(int a,int b, int n){
        if(n==0){
            return ;
        }
        int c = a+b;
        System.out.print(c+" ");
        fibo(b,c,n-1);
    }
    
    public static void main(String[] args){
        int a = 0, b = 1;
        System.out.print(a+" ");
        System.out.print(b+" ");
        int n = 7;
        fibo(a,b,n-2);
    }
}


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//print x^n (Stack height = n)

public class Main{
    public static int printPow(int x, int n){
        if(n==0){
            return 1;
        }
        if(x==0){
            return 0;
        }
        return(x*printPow(x,n-1));
    }
    public static void main(String[] args){
        int x = 3;
        int n = 4;
        int power = printPow(x,n);
        System.out.println(power);
    }
}


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//print x^n (Stack height = log n)

public class Main{
    public static int printPow(int x, int n){
        if(n==0){
            return 1;
        }
        if(x==0){
            return 0;
        }
        if(n%2==0){
            return printPow(x,n/2)*printPow(x,n/2);
        }else{
            return printPow(x,n/2)*printPow(x,n/2)*x;
        }
    }
    public static void main(String[] args){
        int x = 3;
        int n = 4;
        int power = printPow(x,n);
        System.out.println(power);
    }
}



//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//Tower of Hanoi

class Main {
    public static void tower(int n , String src, String helper, String dest){
        if(n==1){
            System.out.println("move disk "+n+" from "+src+" to "+dest);
            return;
        }
        tower(n-1,src,dest,helper);
        System.out.println("move disk "+n+" from "+src+" to "+dest);
        tower(n-1,helper,src,dest);
    }
    
    public static void main(String[] args) {
        int n = 3;
        tower(n,"S","H","D");
    }
}




//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//reverse string


class Main {
    public static void reverseString(String s, int n){
        if(n==0){
            return;
        }
        System.out.print(s.charAt(n-1));
        reverseString(s, n-1);
    }
    
    public static void main(String[] args) {
       
        String std="apple";
        int n = std.length();
        reverseString(std,n);
    }
}


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// find the 1st and last occurence of an element in a string 

public class Main{
    public static int first = -1;
    public static int last = -1;
    
    public static void findOccurence(String str, int idx, char element)
    {
        if(idx==str.length()){
            System.out.println(first);
            System.out.println(last);
            return ;
        }
        
        char currChar = str.charAt(idx);
        if(currChar==element){
            if(first == -1){
                first++;
            }
            else{
                last=idx;
            }
        }
        findOccurence(str,idx+1,element);
    }
    
    
    public static void main(String[]args){
        String str = "aabacdeeaab";
        char ele = 'a';
        int idx = 0;
        findOccurence(str,idx,ele);
    }
}



//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//
